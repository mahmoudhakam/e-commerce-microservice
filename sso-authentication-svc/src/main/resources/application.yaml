# https://jdbc-observations.github.io/datasource-micrometer/docs/current/docs/html/#appendix-common-application-properties
jdbc:
  datasource-proxy:
    enabled: true

spring:
  application:
    name: sso-authentication-svc

  main:
    keep-alive: true # ensures JVM is kept alive, even if all threads are virtual threads https://docs.spring.io/spring-boot/docs/3.2.0-RC2/reference/htmlsingle/#features.spring-application.virtual-threads

  reactor:
    context-propagation: auto # automatically propagates trace and span in reactive pipelines.

  threads:
    virtual:
      enabled: true

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092,localhost:9093,localhost:9094}

  cache:
    type: redis

  data:

    redis:
      port: ${REDIS_PORT:6379 }
      host: ${REDIS_HOST:localhost}
      password: ${REDIS_PASSWORD}

  profiles:
    active: ${ENV_PROFILE:dev}

server:
  port: ${SERVER_PORT:8042}
  shutdown: graceful
  tomcat:
    # enables tomcat metrics
    mbeanregistry:
      enabled: true

management:
  endpoints:
    web:
      exposure:
        include: health,metrics,prometheus
  metrics:
    tags:
      application-name: ${spring.application.name}
  otlp:
    metrics:
      distribution:
        percentiles-histogram:
          http:
            server:
              requests: true
      export:
        url: http://localhost:4318/v1/metrics
        step: 10s
    tracing:
      endpoint: http://localhost:4318/v1/traces
      export:
        step: 10s # Export interval set to 10 seconds
  tracing:
    sampling:
      probability: 1.0

otel:
  grpc-logExporter:
    endpoint: http://localhost:4317

logging:
  level:
    root: INFO
    org.apache.kafka: WARN

